{"version":3,"sources":["components/CustomEmailField.js","components/users.js","components/Header.js","components/posts.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","link","textDecoration","color","icon","width","paddingLeft","CustomEmailField","record","source","classes","href","className","UserList","props","List","Datagrid","rowClick","TextField","label","sortable","h1","zIndex","position","top","left","marginTop","Header","PostList","ReferenceField","reference","EditButton","PostEdit","Edit","SimpleForm","ReferenceInput","SelectInput","optionText","TextInput","PostCreate","Create","dataProvider","jsonServerProvider","firebaseAuthProvider","FirebaseAuthProvider","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","logging","App","Admin","authProvider","Resource","name","list","edit","create","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e11470b2.chunk.js","sourcesContent":["/**\r\n * Created by lara on 3/26/2021.\r\n */\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\n\r\nconst useStyles = makeStyles({\r\n    link: {\r\n        textDecoration: 'underline',\r\n        color:'#268DB5',\r\n    },\r\n    icon: {\r\n        width: '0.5em',\r\n        paddingLeft: 2,\r\n    },\r\n});\r\n\r\nconst CustomEmailField = ({ record = {}, source }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <a href={\"mailto:\" + record[source]} className={classes.link}>\r\n            {record[source]}\r\n            <MailOutlineIcon className={classes.icon} />\r\n        </a>\r\n    );\r\n};\r\n\r\nexport default CustomEmailField;","/**\r\n * Created by lara on 3/26/2021.\r\n */\r\nimport React from 'react';\r\nimport { List, Datagrid, TextField } from 'react-admin';\r\nimport CustomEmailField from \"./CustomEmailField\";\r\n\r\nexport const UserList = props => (\r\n    <List {...props}>\r\n        <Datagrid rowClick=\"edit\">\r\n            <TextField source=\"id\" />\r\n            <TextField source=\"name\" />\r\n            <TextField source=\"username\" />\r\n            <CustomEmailField source=\"email\" />\r\n            <TextField source=\"address.street\" label=\"Street Address\"/>\r\n            <TextField source=\"phone\" sortable=\"{false}\"/>\r\n            <TextField source=\"website\" />\r\n            <TextField source=\"company.name\" label=\"Company Name\"/>\r\n        </Datagrid>\r\n    </List>\r\n);","/**\r\n * Created by lara on 3/26/2021.\r\n */\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    h1: {\r\n        zIndex: '100',\r\n        color:'#3A3A3C',\r\n        position:\"absolute\",\r\n        top: \"0\",\r\n        left: \"200px\",\r\n        marginTop:\"0\",\r\n    },\r\n});\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <h1 className={classes.h1}>Wahsega React Dashboard</h1>\r\n    );\r\n};\r\n\r\nexport default Header;","/**\r\n * Created by lara on 3/26/2021.\r\n */\r\nimport React from 'react';\r\nimport {\r\n    List,\r\n    TextInput,\r\n    SimpleForm,\r\n    Edit,\r\n    Create,\r\n    ReferenceInput,\r\n    SelectInput,\r\n    Datagrid,\r\n    ReferenceField,\r\n    TextField,\r\n    EmailField,\r\n    EditButton,\r\n    EditGuesser\r\n} from 'react-admin';\r\n\r\nexport const PostList = props => (\r\n    <List {...props}>\r\n        <Datagrid rowClick=\"edit\">\r\n            <ReferenceField source=\"userId\" reference=\"users\"><TextField source=\"name\"/></ReferenceField>\r\n            <TextField source=\"id\"/>\r\n            <TextField source=\"title\"/>\r\n            <TextField source=\"body\"/>\r\n            <EditButton/>\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nexport const PostEdit = props => (\r\n    <Edit {...props}>\r\n        <SimpleForm>\r\n            <ReferenceInput source=\"userId\" reference=\"users\"><SelectInput optionText=\"id\"/></ReferenceInput>\r\n            <TextInput source=\"id\"/>\r\n            <TextInput source=\"title\"/>\r\n            <TextInput source=\"body\"/>\r\n        </SimpleForm>\r\n    </Edit>\r\n);\r\n\r\nexport const PostCreate = props => (\r\n    <Create {...props}>\r\n        <SimpleForm>\r\n            <ReferenceInput source=\"userId\" reference=\"users\"><SelectInput optionText=\"id\"/></ReferenceInput>\r\n            <TextInput source=\"id\"/>\r\n            <TextInput source=\"title\"/>\r\n            <TextInput source=\"body\"/>\r\n        </SimpleForm>\r\n    </Create>\r\n);","import React from 'react';\nimport {Admin, Resource, ListGuesser, EditGuesser} from 'react-admin';\nimport jsonServerProvider from 'ra-data-json-server';\nimport {UserList} from \"./components/users\";\nimport Header from \"./components/Header\";\nimport {PostCreate, PostEdit, PostList} from \"./components/posts\";\nimport authProvider from \"./providers/authProvider\";\nimport {\n    FirebaseAuthProvider\n} from 'react-admin-firebase';\n\n//connect the data provider to the REST endpoint\n\nconst config = {\n    apiKey: \"AIzaSyC5rbBe3yb-WJeP_8cNDwn6tRJamRiCBxk\",\n    authDomain: \"react-dashboard-100d8.firebaseapp.com\",\n    databaseURL: \"https://react-dashboard-100d8-default-rtdb.firebaseio.com/\",\n    projectId: \"react-dashboard-100d8\",\n    storageBucket: \"react-dashboard-100d8.appspot.com\",\n    messagingSenderId: \"15009078081\"\n};\n\nconst options = {\n//     // Use a different root document to set your resource collections, by default it uses the root collections of firestore\n//     rootRef: 'root-collection/some-doc',\n// // Your own, previously initialized firebase app instance\n//     app: firebaseAppInstance,\n// // Enable logging of react-admin-firebase\n    logging: true,\n// // Resources to watch for realtime updates, will implicitly watch all resources by default, if not set.\n//     watch: ['posts'],\n// // Resources you explicitly dont want realtime updates for\n//     dontwatch: ['comments'],\n}\nconst dataProvider = jsonServerProvider('https://jsonplaceholder.typicode.com');\nconst firebaseAuthProvider = FirebaseAuthProvider(config,options)\n\nfunction App() {\n    return (\n        <Admin dataProvider={dataProvider} authProvider={firebaseAuthProvider}>\n            <Header/>\n            <Resource name=\"users\" list={UserList}/>\n            <Resource name=\"posts\" list={PostList} edit={PostEdit} create={PostCreate}/>\n\n        </Admin>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}